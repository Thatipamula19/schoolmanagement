{"version":3,"sources":["./src/app/menu/menu.module.ts","./src/app/menu/menu/menu.component.html","./src/app/menu/menu/menu.component.ts","./src/app/student/services/result.service.ts","./src/environments/environment.ts","./src/app/adimin/adimin-login/adimin-login.component.ts","./src/app/adimin/adimin-login/adimin-login.component.html","./src/app/auth/interceptors/adimin.interceptor.ts","./src/app/adimin/adimin.module.ts","./src/app/auth/authguard/adimin.guard.ts","./src/app/studentdetails/studentdetail/studentdetail.component.html","./src/app/studentdetails/studentdetail/studentdetail.component.ts","./src/app/auth/interceptors/student.interceptor.ts","./src/app/common/error.interceptor.ts","./src/app/auth/authguard/employee.guard.ts","./src/app/auth/student-login/student-login.component.ts","./src/app/auth/student-login/student-login.component.html","./src/app/employee/employee.module.ts","./src/app/student/seefees/seefees.component.ts","./src/app/student/seefees/seefees.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/student/services/studentadimision.service.ts","./src/app/student/services/fees.service.ts","./src/app/auth/authguard/student.guard.ts","./src/app/auth/interceptors/employee.interceptor.ts","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/auth/login.service.ts","./src/app/common/common.module.ts","./src/app/common/footer/footer.component.ts","./src/app/common/footer/footer.component.html","./src/app/common/about/about.component.ts","./src/app/common/about/about.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/student/adimision/adimision.component.ts","./src/app/student/adimision/adimision.component.html","./src/app/student/studentdetails/studentdetails.component.ts","./src/app/student/studentdetails/studentdetails.component.html","./src/app/common/error/error.component.ts","./src/app/common/error/error.component.html","./src/app/student/student.module.ts","./src/app/student/addfees/addfees.component.ts","./src/app/student/addfees/addfees.component.html","./src/app/studentdetails/studentfees/studentfees.component.html","./src/app/studentdetails/studentfees/studentfees.component.ts","./src/app/student/seeresult/seeresult.component.ts","./src/app/student/seeresult/seeresult.component.html","./src/app/student/addresult/addresult.component.ts","./src/app/student/addresult/addresult.component.html","./src/app/studentdetails/studentresult/studentresult.component.html","./src/app/studentdetails/studentresult/studentresult.component.ts","./src/app/employee/employee/employee.component.ts","./src/app/employee/employee/employee.component.html","./src/app/auth/student-login.service.ts","./src/app/employee/employee.service.ts","./src/app/studentdetails/studentdetails.module.ts","./src/app/auth/loginpage/loginpage.component.ts","./src/app/auth/loginpage/loginpage.component.html","./src/app/common/home/home.component.ts","./src/app/common/home/home.component.html","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/adimin/adimin-login.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuComponent } from './menu/menu.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '../material.module';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n    MenuComponent\n  ],\n  imports: [\n    CommonModule, BrowserAnimationsModule, MaterialModule, MDBBootstrapModule.forRoot(),\n    RouterModule\n  ],\n  exports: [MenuComponent]\n})\nexport class MenuModule { }\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-xl  sticky-top navbar-dark indigo\">\r\n\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand><a class=\"navbar-brand waves-light\" routerLink=\"/\" mdbWavesEffect>Home</a></mdb-navbar-brand>\r\n\r\n    <!-- Collapsible content -->\r\n    <links>\r\n\r\n        <!-- Links -->\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item dropdown\" *ngIf=\"employeeId || adiminId\" dropdown>\r\n                <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\"\r\n                    mdbWavesEffect>\r\n                    Student Records<span class=\"caret\"></span></a>\r\n                <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n                    <a class=\"dropdown-item waves-light\" routerLink=\"/adimision\" mdbWavesEffect>Adimision</a>\r\n                    <a class=\"dropdown-item waves-light\" routerLink=\"/stddetails\" mdbWavesEffect>Student Details</a>\r\n                </div>\r\n            </li>\r\n\r\n\r\n            <li class=\"nav-item\" *ngIf=\"studentId\">\r\n                <a class=\"nav-link waves-light\" routerLink=\"/studentdetail\" mdbWavesEffect>Student Details</a>\r\n            </li>\r\n\r\n            <!-- Student Result -->\r\n            <li class=\"nav-item dropdown\" *ngIf=\"employeeId || adiminId\" dropdown>\r\n                <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\"\r\n                    mdbWavesEffect>\r\n                    Student Result<span class=\"caret\"></span></a>\r\n                <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n                    <a class=\"dropdown-item waves-light\" routerLink=\"/addresult\" mdbWavesEffect>Add Result</a>\r\n                    <a class=\"dropdown-item waves-light\" routerLink=\"/seeresult\" mdbWavesEffect>See Result</a>\r\n                </div>\r\n            </li>\r\n\r\n\r\n\r\n            <li class=\"nav-item\" *ngIf=\"studentId\">\r\n                <a class=\"nav-link waves-light\" routerLink=\"/studentresult\" mdbWavesEffect>Student Result</a>\r\n            </li>\r\n\r\n            <!-- Student Fees -->\r\n            <li class=\"nav-item dropdown\" *ngIf=\"employeeId || adiminId\" dropdown>\r\n                <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\"\r\n                    mdbWavesEffect>\r\n                    Student Fees<span class=\"caret\"></span></a>\r\n                <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n                    <a class=\"dropdown-item waves-light\" routerLink=\"/addfees\" mdbWavesEffect>Add Fees</a>\r\n                    <a class=\"dropdown-item waves-light\" routerLink=\"/seefees\" mdbWavesEffect>See Fees</a>\r\n                </div>\r\n            </li>\r\n\r\n\r\n            <li class=\"nav-item\" *ngIf=\"studentId\">\r\n                <a class=\"nav-link waves-light\" routerLink=\"/studentfees\" mdbWavesEffect>Student Fees</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\" *ngIf=\"adiminId\">\r\n                <a class=\"nav-link waves-light\" routerLink=\"/addemployee\" mdbWavesEffect>Add Employee</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\" *ngIf=\"!employeeId && !studentId && !adiminId \">\r\n                <a class=\"nav-link waves-light\" routerLink=\"/loginpage\" mdbWavesEffect>Login</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\" *ngIf=\"employeeId\">\r\n                <a class=\"nav-link waves-light\" (click)=\"employeelogout()\" mdbWavesEffect>LogOut</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\" *ngIf=\"studentId\">\r\n                <a class=\"nav-link waves-light\" (click)=\"studentlogout()\" mdbWavesEffect>LogOut</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\" *ngIf=\"adiminId\">\r\n                <a class=\"nav-link waves-light\" (click)=\"adiminlogout()\" mdbWavesEffect>LogOut</a>\r\n            </li>\r\n        </ul>\r\n\r\n\r\n    </links>\r\n    <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n<!--/.Navbar-->","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { AdiminLoginService } from 'src/app/adimin/adimin-login.service';\nimport { LoginService } from 'src/app/auth/login.service';\nimport { StudentLoginService } from 'src/app/auth/student-login.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit, OnDestroy {\n\n  employeeId: string;\n  studentId: string;\n  adiminId: string;\n  employeeLogin = false;\n  studentLogin = false;\n  adiminLogin = false;\n  employeeStatusSubs: Subscription;\n  studentStatusSubs: Subscription;\n  adiminStatusSubs: Subscription;\n  constructor(private loginService: LoginService, private studentService: StudentLoginService,\n    private adiminService: AdiminLoginService) { }\n\n  ngOnInit() {\n\n    this.employeeId = this.loginService.getemployeeId();\n    this.studentId = this.studentService.getStudentId();\n    this.adiminId = this.adiminService.getadiminId();\n\n\n    this.employeeStatusSubs = this.loginService.getEmployeeStatusListner()\n      .subscribe(employeeLogin => {\n        this.employeeLogin = employeeLogin;\n        this.employeeId = this.loginService.getemployeeId();\n      });\n\n    this.studentStatusSubs = this.studentService.getStudentStatusListner()\n      .subscribe(studentLogin => {\n        this.studentLogin = studentLogin;\n        this.studentId = this.studentService.getStudentId();\n      });\n    this.adiminStatusSubs = this.adiminService.getAdiminStatusListner()\n      .subscribe(adiminLogin => {\n        this.adiminLogin = adiminLogin;\n        this.adiminId = this.adiminService.getadiminId();\n      })\n\n  }\n\n  employeelogout() {\n    this.loginService.logout();\n  }\n\n  studentlogout() {\n    this.studentService.logout();\n  }\n  adiminlogout() {\n    this.adiminService.logout();\n  }\n\n  ngOnDestroy() {\n    this.employeeStatusSubs.unsubscribe();\n    this.studentStatusSubs.unsubscribe();\n    this.adiminStatusSubs.unsubscribe();\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Result } from '../models/result.model';\n\nconst BackEndUrl = environment.apiUrl + \"/result/\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResultService {\n\n  private results: Result[] = [];\n  private updateResults = new Subject<Result[]>();\n\n  constructor(private http: HttpClient) { }\n\n  getResults() {\n    this.http.get<{ message: string, results: any }>(BackEndUrl)\n      .pipe(map((resultData) => {\n        return resultData.results.map((result) => {\n          return {\n            studentid: result.studentid,\n            stdname: result.stdname,\n            stdclass: result.stdclass,\n            telugu: result.telugu,\n            hindi: result.hindi,\n            english: result.english,\n            maths: result.maths,\n            science: result.science,\n            social: result.social\n          }\n        })\n      })).subscribe(tranformedData => {\n        this.results = tranformedData;\n        this.updateResults.next([...this.results]);\n      })\n  }\n\n\n  getResultUpadateListener() {\n    return this.updateResults.asObservable();\n  }\n\n  getResult(studentid: string) {\n    return this.http.get<{\n      _id: string, studentid: string, stdname: string, stdclass: string, telugu: number, hindi: number, english: number, maths: number,\n      science: number, social: number\n    }>(BackEndUrl + studentid);\n  }\n\n  addResult(studentid: string, stdname: string, stdclass: string, telugu: number, hindi: number, english: number, maths: number,\n    science: number, social: number\n  ) {\n\n    const result: Result = {\n      id: 'null',\n      studentid: studentid, stdname: stdname, stdclass: stdclass, telugu: telugu, hindi: hindi, english: english,\n      maths: maths, science: science, social: social\n    }\n    this.http.post<{ message: string, studentid: string }>(BackEndUrl, result)\n      .subscribe(responseData => {\n        const stdid = responseData.studentid;\n        this.results.push(result);\n        this.updateResults.next([...this.results]);\n\n      })\n\n  }\n\n  updateResult(id: string, studentid: string, stdname: string, stdclass: string, telugu: number, hindi: number, english: number, maths: number,\n    science: number, social: number) {\n    const result: Result = {\n      id: id, studentid: studentid, stdname: stdname, stdclass: stdclass, telugu: telugu, hindi: hindi, english: english,\n      maths: maths, science: science, social: social\n    }\n\n    this.http.put<{ message: string, studentid: string }>(BackEndUrl + studentid, result)\n      .subscribe(responseData => {\n        const stdid = responseData.studentid;\n        this.results.push(result);\n        this.updateResults.next([...this.results]);\n\n      })\n  }\n\n  deleteResult(studentid: string) {\n    this.http.delete(BackEndUrl + studentid)\n      .subscribe(() => {\n        const updateAdimision = this.results.filter(result => result.studentid !== studentid);\n        this.results = updateAdimision;\n        this.updateResults.next([...this.results]);\n\n      })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:3000/api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AdiminLoginService } from '../adimin-login.service';\n\n@Component({\n  selector: 'app-adimin-login',\n  templateUrl: './adimin-login.component.html',\n  styleUrls: ['./adimin-login.component.css']\n})\nexport class AdiminLoginComponent implements OnInit {\n\n  adiminLogin: FormGroup;\n\n  constructor(private adiminService: AdiminLoginService) { }\n\n  ngOnInit() {\n    this.adiminLogin = new FormGroup({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required)\n    });\n  }\n  Login(adiminLogin) {\n    if (this.adiminLogin.invalid) {\n      return;\n    }\n    this.adiminService.adiminLogin(this.adiminLogin.value.username, this.adiminLogin.value.password);\n\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h1 class=\"text-center\">Adimin Login</h1>\n        <form [formGroup]=\"adiminLogin\" (submit)=\"Login(adiminLogin.value)\">\n            <div class=\"col-lg-4\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>User Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Enter User Name\" required>\n                    <mat-error *ngIf=\"adiminLogin.get('username').errors?.required\">Please Enter User Name\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter Password\" required>\n                    <mat-error *ngIf=\"adiminLogin.get('password').errors?.required\">Please Enter Password\n                    </mat-error>\n                </mat-form-field>\n                <div>\n                    <button mdbBtn type=\"submit\" color=\"default\" [rounded]=\"true\" mdbWavesEffect>Subimt</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { AdiminLoginService } from 'src/app/adimin/adimin-login.service';\n\n\n@Injectable()\nexport class AdiminInterceptor implements HttpInterceptor {\n\n  constructor(private adiminService: AdiminLoginService) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler) {\n\n    const adiminToken = this.adiminService.getToken();\n    const adiminRequest = request.clone({\n      headers: request.headers.set(\"Authorization\", \"Bearer\" + adiminToken)\n    })\n    return next.handle(adiminRequest);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdiminLoginComponent } from './adimin-login/adimin-login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '../material.module';\nimport { MDBBootstrapModule, MdbBreadcrumbComponent } from 'angular-bootstrap-md';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n@NgModule({\n  declarations: [\n    AdiminLoginComponent\n  ],\n  imports: [\n    CommonModule, BrowserAnimationsModule, MaterialModule, MDBBootstrapModule.forRoot(),\n    FormsModule, ReactiveFormsModule, HttpClientModule\n  ],\n  exports: [AdiminLoginComponent],\n  entryComponents: [AdiminLoginComponent]\n\n})\nexport class AdiminModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AdiminLoginService } from 'src/app/adimin/adimin-login.service';\nimport { LoginService } from '../login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdiminGuard implements CanActivate {\n  constructor(private adiminService: AdiminLoginService, private employeeSeevice: LoginService, private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    const isAdimin = this.adiminService.getadiminId();\n    const isEmployee = this.employeeSeevice.getemployeeId();\n    console.log(isAdimin);\n    if (isAdimin) {\n      return true;\n    } else if (isEmployee) {\n      return true;\n    } else {\n      this.router.navigate([\"/loginpage\"]);\n      return false;\n    }\n\n\n  }\n\n}\n","<!-- Table Start-->\n<div class=\"container\">\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <div class=\"row\" *ngFor=\"let ad of studentdetail\">\n        <div class=\"col-lg-8\" *ngIf=\"!isLoading\">\n            <table class=\" table table-bordered border-primary table-striped table-hover table-light\">\n                <tr>\n                    <th colspan=\"2\" class=\"text-center bg-info\"><b>Student Details</b></th>\n                </tr>\n                <tr>\n                    <th>Student Id</th>\n                    <td>\n                        {{ad.studentid}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Name</th>\n                    <td>\n                        {{ad.stdname}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>FatherName</th>\n                    <td>\n                        {{ad.stdfathername}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Gender</th>\n                    <td>\n                        {{ad.stdgender}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Mobile</th>\n                    <td>\n                        {{ad.stdmobile}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Email</th>\n                    <td>\n                        {{ad.stdemail}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Date of Birth</th>\n                    <td>\n                        {{ad.stddob}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Class</th>\n                    <td>\n                        {{ad.stdclass}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Address</th>\n                    <td>\n                        {{ad.stdaddress}}\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>\n<!-- Table End-->","import { Component, OnInit } from '@angular/core';\nimport { StudentLoginService } from 'src/app/auth/student-login.service';\nimport { StudentadimisionService } from 'src/app/student/services/studentadimision.service';\n\n@Component({\n  selector: 'app-studentdetail',\n  templateUrl: './studentdetail.component.html',\n  styleUrls: ['./studentdetail.component.css']\n})\nexport class StudentdetailComponent implements OnInit {\n  isLoading = false;\n  studentdetail: any[];\n  studentId: string;\n\n  constructor(private studentService: StudentLoginService, private adimisionService: StudentadimisionService) { }\n\n  ngOnInit() {\n\n    this.studentId = this.studentService.getStudentId();\n    this.isLoading = true;\n    this.adimisionService.getAdimision(this.studentId)\n      .subscribe(student => {\n        this.isLoading = false;\n        console.log(student);\n        this.studentdetail = [student];\n      })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { StudentLoginService } from '../student-login.service';\n\n@Injectable()\nexport class StudentInterceptor implements HttpInterceptor {\n\n  constructor(private studentService: StudentLoginService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const studentToken = this.studentService.getToken();\n    const studentRequest = req.clone({\n      headers: req.headers.set(\"Authorization\", \"Bearer\" + studentToken)\n    });\n    return next.handle(studentRequest);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { catchError } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrorComponent } from './error/error.component';\nimport { throwError } from 'rxjs';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private dialog: MatDialog) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = \"An unkown error occured\";\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage } });\n        return throwError(error);\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeGuard implements CanActivate {\n  constructor(private employeeLoginService: LoginService, private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isEmployee = this.employeeLoginService.getemployeeId();\n    console.log(isEmployee);\n    if (!isEmployee) {\n      this.router.navigate([\"/loginpage\"]);\n    }\n    return isEmployee;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { StudentLoginService } from '../student-login.service';\n\n@Component({\n  selector: 'app-student-login',\n  templateUrl: './student-login.component.html',\n  styleUrls: ['./student-login.component.css']\n})\nexport class StudentLoginComponent implements OnInit {\n  studentLogin: FormGroup;\n\n  constructor(private studentService: StudentLoginService) { }\n\n\n  ngOnInit() {\n    this.studentLogin = new FormGroup({\n      studentid: new FormControl(null, Validators.required),\n      stddob: new FormControl(null, Validators.required)\n    });\n  }\n  Login(studentLogin) {\n    if (this.studentLogin.invalid) {\n      return;\n    }\n    this.studentService.login(this.studentLogin.value.studentid, this.studentLogin.value.stddob);\n    console.log(studentLogin)\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h1 class=\"text-center\">Student Login</h1>\n        <form [formGroup]=\"studentLogin\" (submit)=\"Login(studentLogin.value)\">\n            <div class=\"col-lg-4\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Id</mat-label>\n                    <input matInput type=\"text\" formControlName=\"studentid\" placeholder=\"Enter Student Id\" required>\n                    <mat-error *ngIf=\"studentLogin.get('studentid').errors?.required\">Please Enter Student Id\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Date of Birth</mat-label>\n                    <input matInput type=\"date\" formControlName=\"stddob\" placeholder=\"Enter Student Date of Birth\"\n                        required>\n                    <mat-error *ngIf=\"studentLogin.get('stddob').errors?.required\">Please Enter Student Date of Birth\n                    </mat-error>\n                </mat-form-field>\n                <div>\n                    <button mdbBtn type=\"submit\" color=\"default\" [rounded]=\"true\" mdbWavesEffect>Subimt</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '../material.module';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n@NgModule({\n  declarations: [\n    EmployeeComponent\n  ],\n  imports: [\n    CommonModule, BrowserAnimationsModule, MaterialModule, MDBBootstrapModule.forRoot(),\n    FormsModule, ReactiveFormsModule, HttpClientModule\n  ]\n})\nexport class EmployeeModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AdiminLoginService } from 'src/app/adimin/adimin-login.service';\nimport { Fees } from '../models/fees.model';\nimport { FeesService } from '../services/fees.service';\n\n@Component({\n  selector: 'app-seefees',\n  templateUrl: './seefees.component.html',\n  styleUrls: ['./seefees.component.css']\n})\nexport class SeefeesComponent implements OnInit, OnDestroy {\n\n  feesForm: FormGroup;\n  feeses: Fees[] = [];\n  fees: any[];\n  feesSubs: Subscription;\n  feebalance: number;\n  adiminId: string;\n\n  constructor(private feesService: FeesService, private adiminService: AdiminLoginService) { }\n\n  ngOnInit() {\n\n    this.adiminId = this.adiminService.getadiminId();\n    this.feesForm = new FormGroup({\n      studentid: new FormControl(null, Validators.required)\n    });\n\n\n    this.feesSubs = this.feesService.getFeesUpdateListener()\n      .subscribe((feeses: Fees[]) => {\n        this.feeses = feeses;\n      })\n\n  }\n\n  Search(feesForm) {\n    if (this.feesForm.invalid) {\n      return;\n    }\n    this.feesService.getFees(this.feesForm.value.studentid)\n      .subscribe(feees => {\n        this.fees = [feees];\n        this.feebalance = feees.totalamount - feees.paidamount;\n      })\n\n    this.feesForm.reset();\n  }\n\n  deleteFees(studentid) {\n    this.feesService.deleteFees(studentid);\n  }\n\n\n  ngOnDestroy() {\n    this.feesSubs.unsubscribe();\n  }\n}\n","<div class=\"container-fuild mt-4\">\n    <h1>Student Fees Details</h1>\n    <div class=\"row\">\n        <form [formGroup]=\"feesForm\" (submit)=\"Search(feesForm.value)\">\n            <div class=\"col-sm-4 text-center\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Id</mat-label>\n                    <input matInput type=\"number\" formControlName=\"studentid\" placeholder=\"Enter Student Id\" required>\n                </mat-form-field>\n                <br><br>\n                <button mdbBtn type=\"submit\" gradient=\"aqua\" rounded=\"true\" mdbWavesEffect>Search</button>\n            </div>\n        </form>\n    </div>\n\n    <div class=\"container\">\n        <div class=\"row\" *ngFor=\"let ad of fees\">\n            <div class=\"col-lg-8\">\n                <table class=\" table table-bordered border-primary table-striped table-hover table-light\">\n                    <tr>\n                        <th colspan=\"2\" class=\"text-center bg-info\"><b>Student Fees</b></th>\n                    </tr>\n                    <tr>\n                        <th>Student Id</th>\n                        <td>\n                            {{ad.studentid}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Name</th>\n                        <td>\n                            {{ad.stdname}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>FatherName</th>\n                        <td>\n                            {{ad.stdfathername}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Class</th>\n                        <td>\n                            {{ad.stdclass}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Mobile</th>\n                        <td>\n                            {{ad.stdmobile}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Total Amount Rs.</th>\n                        <td>\n                            {{ad.totalamount}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Paid Amount Rs.</th>\n                        <td>\n                            {{ad.paidamount}}\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th>Fees Term</th>\n                        <td>\n                            {{ad.feeterm}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Payment Mode</th>\n                        <td>\n                            {{ad.paymentmode}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Payment Date</th>\n                        <td>\n                            {{ad.paymentdate}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Balance</th>\n                        <td>\n                            {{feebalance}}\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th></th>\n                        <td>\n                            <a class=\"btn btn-info\" [routerLink]=\"['/editfees', ad.studentid]\">Edit\n                            </a>\n                            <a class=\"btn btn-danger\" *ngIf=\"adiminId\" (click)=\"deleteFees(ad.studentid)\">Delete</a>\n                        </td>\n                    </tr>\n\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AdiminLoginService } from './adimin/adimin-login.service';\nimport { LoginService } from './auth/login.service';\nimport { StudentLoginService } from './auth/student-login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'school';\n\n  constructor(private studentService: StudentLoginService, private employeeLoginService: LoginService,\n    private adiminService: AdiminLoginService) { }\n\n  ngOnInit() {\n    this.studentService.autoStudent();\n    this.employeeLoginService.autoEmployee();\n    this.adiminService.autoAdimin();\n\n  }\n}\n","<app-menu></app-menu>\r\n\r\n<div class=\"container-fuild\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n<app-footer></app-footer>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Adimision } from '../models/adimision.model';\n\nconst BackEndUrl = environment.apiUrl + \"/adimision/\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentadimisionService {\n  private adimisions: Adimision[] = [];\n  private updatedAdmisions = new Subject<Adimision[]>();\n\n  constructor(private http: HttpClient) { }\n\n\n  getAdimisions() {\n    this.http.get<{ message: string, adimisions: any }>(BackEndUrl)\n      .pipe(map((adimisionData) => {\n        return adimisionData.adimisions.map(adimision => {\n          return {\n            studentid: adimision.studentid,\n            stdname: adimision.stdname,\n            stdfathername: adimision.stdfathername,\n            stdgender: adimision.stdgender,\n            stddob: adimision.stdgender,\n            stdmobile: adimision.stdmobile,\n            stdemail: adimision.stdmobile,\n            stdclass: adimision.stdclass,\n            stdaddress: adimision.stdaddress\n          }\n        });\n      })).subscribe(transformedData => {\n        this.adimisions = transformedData;\n        this.updatedAdmisions.next([...this.adimisions]);\n      })\n  }\n\n  getAdimisionUpdateListener() {\n    return this.updatedAdmisions.asObservable();\n  }\n\n  getAdimision(studentid: string) {\n    return this.http.get<{\n      _id: string,\n      studentid: string, stdname: string, stdfathername: string, stdgender: string, stddob: string,\n      stdmobile: string, stdemail: string, stdclass: string, stdaddress: string\n    }>(BackEndUrl + studentid);\n  }\n\n\n  newAdimision(studentid: string, stdname: string, stdfathername: string, stdgender: string, stddob: string,\n    stdmobile: string, stdemail: string, stdclass: string, stdaddress: string) {\n    const adimision: Adimision = {\n      id: 'null', studentid: studentid, stdname: stdname, stdfathername: stdfathername, stdgender: stdgender, stddob: stddob,\n      stdmobile: stdmobile, stdemail: stdemail, stdclass: stdclass, stdaddress: stdaddress\n    }\n\n    this.http.post<{ message: string, studentid: string }>(BackEndUrl, adimision)\n      .subscribe(responseData => {\n        const stdid = responseData.studentid;\n        this.adimisions.push(adimision);\n        this.updatedAdmisions.next([...this.adimisions]);\n\n      })\n  }\n\n  updateAdimision(id: string, studentid: string, stdname: string, stdfathername: string, stdgender: string, stddob: string,\n    stdmobile: string, stdemail: string, stdclass: string, stdaddress: string) {\n\n    const adimision: Adimision = {\n      id: id,\n      studentid: studentid, stdname: stdname, stdfathername: stdfathername, stdgender: stdgender, stddob: stddob,\n      stdmobile: stdmobile, stdemail: stdemail, stdclass: stdclass, stdaddress: stdaddress\n    }\n    this.http.put<{ message: string, studentid: string }>(BackEndUrl + studentid, adimision)\n      .subscribe(responseData => {\n        const stdid = responseData.studentid;\n        this.adimisions.push(adimision);\n        this.updatedAdmisions.next([...this.adimisions]);\n\n      })\n\n    console.log(adimision)\n  }\n\n  deleteAdimison(studentid: string) {\n    this.http.delete(BackEndUrl + studentid)\n      .subscribe(() => {\n        const updateAdimision = this.adimisions.filter(adimision => adimision.studentid !== studentid);\n        this.adimisions = updateAdimision;\n        this.updatedAdmisions.next([...this.adimisions]);\n\n      })\n  }\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Fees } from '../models/fees.model';\n\nconst BackEndUrl = environment.apiUrl + \"/fees/\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeesService {\n\n  private feeses: Fees[] = [];\n  private updateFeeses = new Subject<Fees[]>();\n\n  constructor(private http: HttpClient) { }\n\n  getFeeses() {\n    this.http.get<{ message: string, feeses: any }>(BackEndUrl)\n      .pipe((map((feesData) => {\n        return feesData.feeses.map(fees => {\n          return {\n            studentid: fees.studentid,\n            stdname: fees.stdname,\n            stdfathername: fees.stdfathername,\n            stdclass: fees.stdclass,\n            stdmobile: fees.stdmobile,\n            totalamount: fees.totalamount,\n            paidamount: fees.paidamount,\n            feeterm: fees.feeterm,\n            paymentmode: fees.paymentmode,\n            paymentdate: fees.paymentdate\n          }\n        })\n      }))).subscribe(transformedData => {\n        this.feeses = transformedData,\n          this.updateFeeses.next([...this.feeses]);\n      })\n  }\n\n  getFeesUpdateListener() {\n    return this.updateFeeses.asObservable();\n  }\n\n  getFees(studentid: string) {\n    return this.http.get<{\n      _id: string, studentid: string, stdname: string, stdfathername: string, stdclass: string, stdmobile: string, totalamount: number,\n      paidamount: number, feeterm: string, paymentmode: string, paymentdate: string\n    }>(BackEndUrl + studentid);\n\n  }\n\n  addFees(studentid: string, stdname: string, stdfathername: string, stdclass: string, stdmobile: string, totalamount: number,\n    paidamount: number, feeterm: string, paymentmode: string, paymentdate: string) {\n\n    const fees: Fees = {\n      id: \"null\", studentid: studentid, stdname: stdname, stdfathername: stdfathername, stdclass: stdclass, stdmobile: stdmobile, totalamount: totalamount,\n      paidamount: paidamount, feeterm: feeterm, paymentmode: paymentmode, paymentdate: paymentdate\n    }\n\n    this.http.post<{ message: string, studentid: string }>(BackEndUrl, fees)\n      .subscribe(responseData => {\n        const stdid = responseData.studentid;\n        this.feeses.push(fees);\n        this.updateFeeses.next([...this.feeses]);\n      });\n  }\n\n  updateFees(id: string, studentid: string, stdname: string, stdfathername: string, stdclass: string, stdmobile: string, totalamount: number,\n    paidamount: number, feeterm: string, paymentmode: string, paymentdate: string) {\n    const fees: Fees = {\n      id: id, studentid: studentid, stdname: stdname, stdfathername: stdfathername, stdclass: stdclass, stdmobile: stdmobile, totalamount: totalamount,\n      paidamount: paidamount, feeterm: feeterm, paymentmode: paymentmode, paymentdate: paymentdate\n    }\n    this.http.put<{ message: string, studentid: string }>(BackEndUrl + studentid, fees)\n      .subscribe(updatedata => {\n        const stdid = updatedata.studentid;\n        this.feeses.push(fees);\n        this.updateFeeses.next([...this.feeses]);\n      })\n  }\n\n  deleteFees(studentid: string) {\n    this.http.delete<{ message: string, studentid: string }>(BackEndUrl + studentid)\n      .subscribe(() => {\n        const updatedFees = this.feeses.filter(fees => fees.studentid !== studentid);\n        this.feeses = updatedFees;\n        this.updateFeeses.next([...this.feeses]);\n      })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { StudentLoginService } from '../student-login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentGuard implements CanActivate {\n  constructor(private studentService: StudentLoginService, private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isStudent = this.studentService.getStudentId();\n    if (!isStudent) {\n      this.router.navigate([\"/loginpage\"]);\n    }\n    return true;\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { LoginService } from '../login.service';\n\n@Injectable()\nexport class EmployeeInterceptor implements HttpInterceptor {\n\n  constructor(private employeeLoginService: LoginService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const employeeToken = this.employeeLoginService.getToken();\n    const employeeRequest = req.clone({\n      headers: req.headers.set(\"Authorization\", \"Bearer\" + employeeToken)\n    });\n    return next.handle(employeeRequest);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '../material.module';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { StudentLoginComponent } from './student-login/student-login.component';\nimport { LoginpageComponent } from './loginpage/loginpage.component';\nimport { AdiminModule } from '../adimin/adimin.module';\nimport { EmployeeInterceptor } from './interceptors/employee.interceptor';\nimport { StudentInterceptor } from './interceptors/student.interceptor';\nimport { AdiminInterceptor } from './interceptors/adimin.interceptor';\n\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    StudentLoginComponent,\n    LoginpageComponent,\n\n  ],\n  imports: [\n    CommonModule, BrowserAnimationsModule, MaterialModule, MDBBootstrapModule.forRoot(),\n    HttpClientModule, FormsModule, ReactiveFormsModule, AdiminModule\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: EmployeeInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: StudentInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: AdiminInterceptor, multi: true },]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { AdiminModule } from './adimin/adimin.module';\nimport { CommonModule } from '@angular/common';\nimport { EmployeeModule } from './employee/employee.module';\nimport { MenuModule } from './menu/menu.module';\nimport { StudentModule } from './student/student.module';\nimport { AuthModule } from './auth/auth.module';\nimport { CommaonModule } from './common/common.module';\nimport { StudentdetailsModule } from './studentdetails/studentdetails.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { EmployeeInterceptor } from './auth/interceptors/employee.interceptor';\nimport { StudentInterceptor } from './auth/interceptors/student.interceptor';\nimport { ErrorInterceptor } from './common/error.interceptor';\nimport { AdiminInterceptor } from './auth/interceptors/adimin.interceptor';\nimport { StudentGuard } from './auth/authguard/student.guard';\nimport { AdiminGuard } from './auth/authguard/adimin.guard';\nimport { EmployeeGuard } from './auth/authguard/employee.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, CommonModule,\n    AppRoutingModule, MaterialModule, MDBBootstrapModule.forRoot(),\n    BrowserAnimationsModule,\n    //Modules\n    AdiminModule, AuthModule, CommaonModule, EmployeeModule, MenuModule, StudentModule,\n    StudentdetailsModule\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: EmployeeInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: StudentInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: AdiminInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }, StudentGuard, AdiminGuard, EmployeeGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Login } from './login/login.model';\n\nconst BackEndUrl = environment.apiUrl + \"/employee/login\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  isAuthenticated = false;\n\n  private token: string;\n  private tokenTimer: any;\n  private employeeId: any;\n  private employeeStatusListener = new Subject<boolean>();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getToken() {\n    return this.token;\n  }\n\n  getEmployeeStatusListner() {\n    return this.employeeStatusListener;\n  }\n\n  getemployeeId() {\n    return this.employeeId;\n  }\n\n  getIsEmployee() {\n    return this.isAuthenticated;\n  }\n\n\n\n\n\n  login(username: string, password: string) {\n    const login: Login = { username: username, password: password }\n    console.log(login);\n    this.http.post<{ token: string, expiresIn: number, employeeId: string, isAdimin: boolean }>(BackEndUrl, login)\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expriesInDuration = response.expiresIn;\n          console.log(response.expiresIn);\n          this.setEmployeeTimer(expriesInDuration);\n          this.isAuthenticated = true;\n          this.employeeId = response.employeeId;\n          this.employeeStatusListener.next(true);\n          const now = new Date();\n          const exprirationDate = new Date(now.getTime() + expriesInDuration * 1000);\n          console.log(exprirationDate);\n          this.saveEmployeeData(token, exprirationDate, this.employeeId);\n          this.router.navigate([\"/\"]);\n        }\n\n\n      }, error => {\n        this.employeeStatusListener.next(false);\n      })\n  }\n\n\n\n  autoEmployee() {\n    const employeeInformation = this.getEmployeeData();\n\n    if (!employeeInformation) {\n      return;\n    }\n\n    const now = new Date();\n    const expriesIn = employeeInformation.exprirationDate.getTime()\n      - now.getTime();\n    this.token = employeeInformation.token;\n    this.isAuthenticated = true;\n    this.employeeId = employeeInformation.employeeId;\n    this.setEmployeeTimer(expriesIn / 1000);\n    this.employeeStatusListener.next(true);\n\n  }\n  logout() {\n    this.token = 'null';\n    this.employeeId = null;\n    this.isAuthenticated = false;\n    this.employeeStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearEmployeeData();\n    this.router.navigate([\"/loginpage\"]);\n\n  }\n\n\n  private setEmployeeTimer(duration: number) {\n    console.log(\"Setting Timer:\" + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveEmployeeData(token: string, exprirationDate: Date, employeeId: string) {\n\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"exprirationDate\", exprirationDate.toISOString());\n    localStorage.setItem(\"employeeId\", employeeId);\n\n  }\n\n  private clearEmployeeData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"exprirationDate\");\n    localStorage.removeItem(\"employeeId\");\n  }\n\n  private getEmployeeData() {\n    const token = localStorage.getItem(\"token\");\n    const exprirationDate = localStorage.getItem(\"exprirationDate\");\n    const employeeId = localStorage.getItem(\"employeeId\");\n\n    if (!token || !exprirationDate) {\n      return false;\n    }\n    return {\n      token: token,\n      exprirationDate: new Date(exprirationDate),\n      employeeId: employeeId\n    }\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '../material.module';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { ErrorComponent } from './error/error.component';\n\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    AboutComponent,\n    FooterComponent,\n    ErrorComponent\n  ],\n  imports: [\n    CommonModule, BrowserAnimationsModule, MaterialModule,\n    MDBBootstrapModule.forRoot()\n  ],\n  exports: [FooterComponent, ErrorComponent]\n})\nexport class CommaonModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"footer\" class=\"container-fuild\">\r\n    <p>2021@School Management System</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  employeeLogin: FormGroup;\n  constructor(private loginService: LoginService) { }\n\n  ngOnInit() {\n    this.employeeLogin = new FormGroup({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required)\n    });\n  }\n  Login(employeeLogin) {\n    if (this.employeeLogin.invalid) {\n      return;\n    }\n    this.loginService.login(this.employeeLogin.value.username, this.employeeLogin.value.password);\n    console.log(employeeLogin)\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h1 class=\"text-center\">Employee Login</h1>\n        <form [formGroup]=\"employeeLogin\" (submit)=\"Login(employeeLogin.value)\">\n            <div class=\"col-lg-4\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>User Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Enter User Name\" required>\n                    <mat-error *ngIf=\"employeeLogin.get('username').errors?.required\">Please Enter User Name\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter Password\" required>\n                    <mat-error *ngIf=\"employeeLogin.get('password').errors?.required\">Please Enter Password\n                    </mat-error>\n                </mat-form-field>\n                <div>\n                    <button mdbBtn type=\"submit\" color=\"default\" [rounded]=\"true\" mdbWavesEffect>Subimt</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Adimision } from '../models/adimision.model';\nimport { StudentadimisionService } from '../services/studentadimision.service';\n\n@Component({\n  selector: 'app-adimision',\n  templateUrl: './adimision.component.html',\n  styleUrls: ['./adimision.component.css']\n})\nexport class AdimisionComponent implements OnInit {\n\n  adimisionform: FormGroup;\n  adimisionid: string;\n\n\n  private studentid: string;\n  isLoading = false;\n  private mode = 'create';\n\n  classes: string[] = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X'];\n  gender: string[] = ['Male', 'Female'];\n  constructor(private adimisionService: StudentadimisionService, private activeRouter: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.adimisionform = new FormGroup({\n      studentid: new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n      stdname: new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n      stdfathername: new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n      stdgender: new FormControl(null, { validators: [Validators.required] }),\n      stddob: new FormControl(null, { validators: [Validators.required] }),\n      stdmobile: new FormControl(null, { validators: [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")] }),\n      stdemail: new FormControl(null, { validators: [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")] }),\n      stdclass: new FormControl(null, { validators: [Validators.required] }),\n      stdaddress: new FormControl(null, { validators: [Validators.required] })\n    })\n\n    this.studentid = this.activeRouter.snapshot.params['id'];\n\n    if (this.studentid) {\n      this.mode = 'edit';\n      this.isLoading = true;\n      this.adimisionService.getAdimision(this.studentid).subscribe(adimision => {\n        this.isLoading = false;\n        this.adimisionid = adimision._id;\n        // this.adimision = {\n        //   studentid: adimision.studentid,\n        //   stdname: adimision.stdname,\n        //   // stdfathername: adimision.stdfathername,\n        //   // stdgender: adimision.stdgender,\n        //   // stddob: adimision.stddob,\n        //   // stdmobile: adimision.stdmobile,\n        //   // stdemail: adimision.stdemail,\n        //   // stdclass: adimision.stdclass,\n        //   // stdaddress: adimision.stdaddress\n\n        // }\n        this.adimisionform.setValue({\n          studentid: adimision.studentid,\n          stdname: adimision.stdname,\n          stdfathername: adimision.stdfathername,\n          stdgender: adimision.stdgender,\n          stddob: adimision.stddob,\n          stdmobile: adimision.stdmobile,\n          stdemail: adimision.stdemail,\n          stdclass: adimision.stdclass,\n          stdaddress: adimision.stdaddress\n        })\n      })\n    }\n    else {\n      this.mode = 'create';\n    }\n\n\n\n  }\n\n  newAdimison(form) {\n    if (this.adimisionform.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === 'create') {\n      this.adimisionService.newAdimision(\n        this.adimisionform.value.studentid,\n        this.adimisionform.value.stdname,\n        this.adimisionform.value.stdfathername,\n        this.adimisionform.value.stdgender,\n        this.adimisionform.value.stddob,\n        this.adimisionform.value.stdmobile,\n        this.adimisionform.value.stdemail,\n        this.adimisionform.value.stdclass,\n        this.adimisionform.value.stdaddress\n      )\n    }\n    else {\n      this.adimisionService.updateAdimision(\n        this.adimisionid,\n        this.adimisionform.value.studentid,\n        this.adimisionform.value.stdname,\n        this.adimisionform.value.stdfathername,\n        this.adimisionform.value.stdgender,\n        this.adimisionform.value.stddob,\n        this.adimisionform.value.stdmobile,\n        this.adimisionform.value.stdemail,\n        this.adimisionform.value.stdclass,\n        this.adimisionform.value.stdaddress\n      )\n    }\n    this.adimisionform.reset();\n  }\n\n\n}\n","<div class=\"container\">\n    <h1 class=\"h1 text-info text-center mt-4\">Adimision Form</h1>\n    <form [formGroup]=\"adimisionform\" (submit)=\"newAdimison(adimisionform.value)\">\n        <div class=\"row\">\n            <div class=\"col-sm-6 empControls\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Id</mat-label>\n                    <input matInput type=\"text\" formControlName=\"studentid\" placeholder=\"Enter Student Id\" required>\n                    <mat-error *ngIf=\"adimisionform.get('studentid').errors?.required\">Please Enter Student Id\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"adimisionform.get('studentid').errors?.minlength\">\n                        Please Enter Minimum 3 Charectors\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"stdname\" placeholder=\"Enter Student Name\" required>\n                    <mat-error *ngIf=\"adimisionform.get('stdname').errors?.required\">Please Enter Student FullName\n                    </mat-error>\n                    <mat-error class=\"warning\" class=\"text-info\" *ngIf=\"adimisionform.get('stdname').errors?.minlength\">\n                        Please Enter Minimum 3 Charector\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Father Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"stdfathername\" placeholder=\"Enter Father Name\"\n                        required>\n                    <mat-error *ngIf=\"adimisionform.get('stdfathername').errors?.required\">Please Enter Student Father\n                        Name\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"adimisionform.get('stdfathername').errors?.minlength\">\n                        Please Enter Minimum 3 Charector\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Gender</mat-label>\n                    <mat-select formControlName=\"stdgender\">\n                        <mat-option *ngFor=\"let gen of gender\" [value]=\"gen\">{{gen}}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"adimisionform.get('stdgender').errors?.required\">Please Select Gender\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Date of Birth</mat-label>\n                    <input matInput type=\"date\" formControlName=\"stddob\" placeholder=\"Student Date of Birth\" required>\n                    <mat-error *ngIf=\"adimisionform.get('stddob').errors?.required\">Please Select Date of Birth\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-sm-6 empControls\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Mobile</mat-label>\n                    <input matInput type=\"number\" formControlName=\"stdmobile\" maxlength=\"10\"\n                        placeholder=\"Enter Mobile Number\" required>\n                    <mat-error *ngIf=\"adimisionform.get('stdmobile').errors?.required\">\n                        Please Enter Mobile Number\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"adimisionform.get('stdmobile').errors?.pattern\">\n                        Please Enter 10 Numbers only\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput type=\"email\" formControlName=\"stdemail\" placeholder=\"Enter Email Address\" required>\n                    <mat-error *ngIf=\"adimisionform.get('stdemail').errors?.required\">\n                        Please Enter E-mail\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"adimisionform.get('stdemail').errors?.pattern\">\n                        Please Enter E-mail in Courrect Format\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>class</mat-label>\n                    <mat-select formControlName=\"stdclass\">\n                        <mat-option *ngFor=\"let class of classes\" [value]=\"class\">{{class}}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"adimisionform.get('stdclass').errors?.required\">Please Select Class\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Address</mat-label>\n                    <input matInput type=\"text\" formControlName=\"stdaddress\" placeholder=\"Enter Student Address\"\n                        required>\n                    <mat-error *ngIf=\"adimisionform.get('stdaddress').errors?.required\">\n                        Please Enter Student Full Address\n                    </mat-error>\n                </mat-form-field>\n                <div>\n                    <button mdbBtn type=\"submit\" color=\"default\" [outline]=\"true\" class=\"\"\n                        mdbWavesEffect>Subimt</button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AdiminLoginService } from 'src/app/adimin/adimin-login.service';\nimport { Adimision } from '../models/adimision.model';\nimport { StudentadimisionService } from '../services/studentadimision.service';\n\n@Component({\n  selector: 'app-studentdetails',\n  templateUrl: './studentdetails.component.html',\n  styleUrls: ['./studentdetails.component.css']\n})\nexport class StudentdetailsComponent implements OnInit, OnDestroy {\n  classes: string[] = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X'];\n  adimisions: Adimision[] = [];\n\n  adimision: any[];\n\n  isLoading = false;\n  adimisioncount: number;\n  adiminId: string;\n  detailForm: FormGroup;\n\n\n  private adimisionsSubs: Subscription;\n  constructor(private adimisionService: StudentadimisionService, private adiminService: AdiminLoginService) { }\n\n  ngOnInit() {\n\n    this.adiminId = this.adiminService.getadiminId();\n\n    this.detailForm = new FormGroup({\n      studentid: new FormControl(null, Validators.required)\n    })\n    this.adimisionService.getAdimisions();\n    this.adimisionsSubs = this.adimisionService.getAdimisionUpdateListener()\n      .subscribe((adimisions: Adimision[]) => {\n        this.adimisions = adimisions;\n      });\n\n\n  }\n\n\n  // studentsByClass(stdclass) {\n  //   return this.adimisions.filter(product => product.stdclass === stdclass);\n  // }\n\n\n  Search(form) {\n    if (this.detailForm.invalid) {\n      return;\n\n    }\n    this.isLoading = true;\n    this.adimisionService.getAdimision(this.detailForm.value.studentid).subscribe(\n\n      adimision => {\n        this.isLoading = false;\n        this.adimision = [adimision];\n        this.adimisioncount = (adimision as any).length;\n      }\n    )\n    this.detailForm.reset();\n  }\n\n  deleteAdimision(studentid) {\n    this.adimisionService.deleteAdimison(studentid);\n  }\n\n  ngOnDestroy() {\n    this.adimisionsSubs.unsubscribe();\n  }\n\n}\n","<div class=\"container-fuild mt-4\">\n    <h1>Student Details</h1>\n    <div class=\"row\">\n        <form [formGroup]=\"detailForm\" (submit)=\"Search(detailForm.value)\">\n            <div class=\"col-sm-4 text-center\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Id</mat-label>\n                    <input matInput type=\"text\" formControlName=\"studentid\" placeholder=\"Enter Student Id\" required>\n                </mat-form-field>\n                <br><br>\n                <button mdbBtn type=\"submit\" gradient=\"aqua\" rounded=\"true\" mdbWavesEffect>Search</button>\n            </div>\n        </form>\n    </div>\n\n    <!-- Table Start-->\n    <div class=\"container\">\n        <div class=\"row\" *ngFor=\"let ad of adimision\">\n            <div class=\"col-lg-8\">\n                <table class=\" table table-bordered border-primary table-striped table-hover table-light\">\n                    <tr>\n                        <th colspan=\"2\" class=\"text-center bg-info\"><b>Student Details</b></th>\n                    </tr>\n                    <tr>\n                        <th>Student Id</th>\n                        <td>\n                            {{ad.studentid}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Name</th>\n                        <td>\n                            {{ad.stdname}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>FatherName</th>\n                        <td>\n                            {{ad.stdfathername}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Gender</th>\n                        <td>\n                            {{ad.stdgender}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Mobile</th>\n                        <td>\n                            {{ad.stdmobile}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Email</th>\n                        <td>\n                            {{ad.stdemail}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Date of Birth</th>\n                        <td>\n                            {{ad.stddob}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Class</th>\n                        <td>\n                            {{ad.stdclass}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Address</th>\n                        <td>\n                            {{ad.stdaddress}}\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th></th>\n                        <td>\n                            <a class=\"btn btn-info\" [routerLink]=\"['/editadimision', ad.studentid]\">Edit\n                            </a>\n                            <a class=\"btn btn-danger\" *ngIf=\"adiminId\"\n                                (click)=\"deleteAdimision(ad.studentid)\">Delete</a>\n                        </td>\n                    </tr>\n\n                </table>\n            </div>\n        </div>\n    </div>\n    <!-- Table End-->\n\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string }) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"modal-dialog modal-notify modal-warning\" role=\"document\">\n    <div class=\"modal-header\">\n        <h1 class=\"heading lead\"> An error Occurred!</h1>\n    </div>\n    <div mat-dialog-content class=\"mt-4\">\n        <!-- <p class=\"mat-body-1\"> {{data.message}} </p> -->\n        <div class=\"text-center mat-body-1\">\n            <mdb-icon fas icon=\"times-circle\" size=\"4x\" class=\"mb-3 animated rotateIn\"></mdb-icon>\n            <p>{{data.message}}</p>\n        </div>\n    </div>\n\n</div>\n<div class=\"modal-footer justify-content-center\">\n    <button mat-dialog-close type=\"button\" mdbBtn color=\"warning\" outline=\"true\" class=\"waves-effect\"\n        mdbWavesEffect>Okay</button>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdimisionComponent } from './adimision/adimision.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '../material.module';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { StudentdetailsComponent } from './studentdetails/studentdetails.component';\nimport { AddresultComponent } from './addresult/addresult.component';\nimport { SeeresultComponent } from './seeresult/seeresult.component';\nimport { AddfeesComponent } from './addfees/addfees.component';\nimport { SeefeesComponent } from './seefees/seefees.component';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n\n    AdimisionComponent,\n    StudentdetailsComponent,\n    AddresultComponent,\n    SeeresultComponent,\n    AddfeesComponent,\n    SeefeesComponent\n  ],\n  imports: [\n    CommonModule, BrowserAnimationsModule, MaterialModule, MDBBootstrapModule.forRoot(),\n    FormsModule, ReactiveFormsModule, HttpClientModule, RouterModule\n  ],\n  exports: [AdimisionComponent]\n})\nexport class StudentModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { FeesService } from '../services/fees.service';\n\n@Component({\n  selector: 'app-addfees',\n  templateUrl: './addfees.component.html',\n  styleUrls: ['./addfees.component.css']\n})\nexport class AddfeesComponent implements OnInit {\n  classes: string[] = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X'];\n  feeterms: string[] = ['Partial Payment', 'Full Payment', 'Monthly', 'Annual'];\n  paymentmode: string[] = ['Cash', 'Card', 'Cheque'];\n\n  feesForm: FormGroup;\n  studentid: string;\n  feesid: string;\n  mode = 'create';\n  isLoading = false;\n\n\n  constructor(private feesService: FeesService, private activeRouter: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.feesForm = new FormGroup({\n      studentid: new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n      stdname: new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n      stdfathername: new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n      stdclass: new FormControl(null, { validators: [Validators.required] }),\n      stdmobile: new FormControl(null, { validators: [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")] }),\n      totalamount: new FormControl(null, { validators: [Validators.required] }),\n      paidamount: new FormControl(null, { validators: [Validators.required] }),\n      feeterm: new FormControl(null, { validators: [Validators.required] }),\n      paymentmode: new FormControl(null, { validators: [Validators.required] }),\n      paymentdate: new FormControl(null, { validators: [Validators.required] })\n    });\n\n    this.studentid = this.activeRouter.snapshot.params['id'];\n    if (this.studentid) {\n      this.mode = 'edit';\n      this.feesService.getFees(this.studentid).subscribe(feesData => {\n        this.isLoading = false;\n        this.feesid = feesData._id;\n\n        this.feesForm.setValue({\n          studentid: feesData.studentid,\n          stdname: feesData.stdname,\n          stdfathername: feesData.stdfathername,\n          stdclass: feesData.stdclass,\n          stdmobile: feesData.stdmobile,\n          totalamount: feesData.totalamount,\n          paidamount: feesData.paidamount,\n          feeterm: feesData.feeterm,\n          paymentmode: feesData.paymentmode,\n          paymentdate: feesData.paymentdate,\n        })\n      })\n    }\n    else {\n      this.mode = 'create';\n    }\n  }\n\n  addFees(feesForm) {\n    if (this.feesForm.invalid) {\n      return;\n    }\n    if (this.mode === 'create') {\n      this.feesService.addFees(\n        this.feesForm.value.studentid,\n        this.feesForm.value.stdname,\n        this.feesForm.value.stdfathername,\n        this.feesForm.value.stdclass,\n        this.feesForm.value.stdmobile,\n        this.feesForm.value.totalamount,\n        this.feesForm.value.paidamount,\n        this.feesForm.value.feeterm,\n        this.feesForm.value.paymentmode,\n        this.feesForm.value.paymentdate\n      )\n    }\n    else {\n      this.feesService.updateFees(\n        this.feesid,\n        this.feesForm.value.studentid,\n        this.feesForm.value.stdname,\n        this.feesForm.value.stdfathername,\n        this.feesForm.value.stdclass,\n        this.feesForm.value.stdmobile,\n        this.feesForm.value.totalamount,\n        this.feesForm.value.paidamount,\n        this.feesForm.value.feeterm,\n        this.feesForm.value.paymentmode,\n        this.feesForm.value.paymentdate\n      )\n    }\n    this.feesForm.reset();\n  }\n\n}\n","<!-- <div class=\"container\">\n    <h1>Add Student Fees</h1>\n    <div class=\"row\">\n        <form [formGroup]=\"feesForm\" (submit)=\"addFees(feesForm.value)\">\n            <div class=\"col-lg-6 empControls\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Id</mat-label>\n                    <input matInput type=\"number\" formControlName=\"studentid\" placeholder=\"Enter Student Id\" required>\n                    <mat-error *ngIf=\"feesForm.get('studentid').errors?.required\">Please Enter Student Id\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"feesForm.get('studentid').errors?.minlength\">\n                        Please Enter Minimum 3 Charectors\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"stdname\" placeholder=\"Enter Student Name\" required>\n                    <mat-error *ngIf=\"feesForm.get('stdname').errors?.required\">Please Enter Student Id\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"feesForm.get('stdname').errors?.minlength\">\n                        Please Enter Minimum 3 Charectors\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Father Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"stdfathername\" placeholder=\"Enter Father Name\"\n                        required>\n                    <mat-error *ngIf=\"feesForm.get('stdfathername').errors?.required\">Please Enter Student Id\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"feesForm.get('stdfathername').errors?.minlength\">\n                        Please Enter Minimum 3 Charectors\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>class</mat-label>\n                    <mat-select formControlName=\"stdclass\" required>\n                        <mat-option *ngFor=\"let class of classes\" [value]=\"class\">{{class}}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"feesForm.get('stdclass').errors?.required\">Please Select Class\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Mobile</mat-label>\n                    <input matInput type=\"number\" formControlName=\"stdmobile\" placeholder=\"Enter Mobile Number\"\n                        required>\n                    <mat-error *ngIf=\"feesForm.get('stdmobile').errors?.required\">\n                        Please Enter Mobile Number\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"feesForm.get('stdmobile').errors?.pattern\">\n                        Please Enter 10 Numbers only\n                    </mat-error>\n                </mat-form-field>\n\n            </div>\n            <div class=\"col-lg-6 empControls\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Total Amount Rs.</mat-label>\n                    <input matInput type=\"number\" formControlName=\"totalamount\" placeholder=\"Enter Total Amount\"\n                        required>\n                    <mat-error *ngIf=\"feesForm.get('totalamount').errors?.required\">Please Enter Total Anount Rs.\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Paid Amount Rs.</mat-label>\n                    <input matInput type=\"number\" formControlName=\"paidamount\" placeholder=\"Enter Paid Amount\" required>\n                    <mat-error *ngIf=\"feesForm.get('paidamount').errors?.required\">Please Enter Paid Anount Rs.\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Fees Terms</mat-label>\n                    <mat-select formControlName=\"feeterm\" required>\n                        <mat-option *ngFor=\"let term of feeterms\" [value]=\"term\">{{term}}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"feesForm.get('feeterm').errors?.required\">Please Select Fees Terms\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Transaction Mode</mat-label>\n                    <mat-select formControlName=\"paymentmode\" requierd>\n                        <mat-option *ngFor=\"let mode of paymentmode\" [value]=\"mode\">{{mode}}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"feesForm.get('paymentmode').errors?.required\">Please Select Transaction Mode\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Payment Date</mat-label>\n                    <input matInput type=\"date\" formControlName=\"paymentdate\" placeholder=\"Date\" required>\n                    <mat-error *ngIf=\"feesForm.get('paymentdate').errors?.required\">Please Select Date\n                    </mat-error>\n                </mat-form-field>\n                <div>\n                    <button mdbBtn type=\"submit\" color=\"default\" [outline]=\"true\" class=\"\"\n                        mdbWavesEffect>Subimt</button>\n                </div>\n\n\n            </div>\n        </form>\n    </div>\n</div> -->\n\n<div class=\"container\">\n    <form [formGroup]=\"feesForm\" (submit)=\"addFees(feesForm.value)\">\n        <div class=\"row\">\n            <div class=\"col-sm-6 empControls\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Id</mat-label>\n                    <input matInput type=\"number\" formControlName=\"studentid\" placeholder=\"Enter Student Id\" required>\n                    <mat-error *ngIf=\"feesForm.get('studentid').errors?.required\">Please Enter Student Id\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"feesForm.get('studentid').errors?.minlength\">\n                        Please Enter Minimum 3 Charectors\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"stdname\" placeholder=\"Enter Student Name\" required>\n                    <mat-error *ngIf=\"feesForm.get('stdname').errors?.required\">Please Enter Student Id\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"feesForm.get('stdname').errors?.minlength\">\n                        Please Enter Minimum 3 Charectors\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Father Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"stdfathername\" placeholder=\"Enter Father Name\"\n                        required>\n                    <mat-error *ngIf=\"feesForm.get('stdfathername').errors?.required\">Please Enter Student Id\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"feesForm.get('stdfathername').errors?.minlength\">\n                        Please Enter Minimum 3 Charectors\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>class</mat-label>\n                    <mat-select formControlName=\"stdclass\" required>\n                        <mat-option *ngFor=\"let class of classes\" [value]=\"class\">{{class}}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"feesForm.get('stdclass').errors?.required\">Please Select Class\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Mobile</mat-label>\n                    <input matInput type=\"number\" formControlName=\"stdmobile\" placeholder=\"Enter Mobile Number\"\n                        required>\n                    <mat-error *ngIf=\"feesForm.get('stdmobile').errors?.required\">\n                        Please Enter Mobile Number\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"feesForm.get('stdmobile').errors?.pattern\">\n                        Please Enter 10 Numbers only\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-sm-6 empControls\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Total Amount Rs.</mat-label>\n                    <input matInput type=\"number\" formControlName=\"totalamount\" placeholder=\"Enter Total Amount\"\n                        required>\n                    <mat-error *ngIf=\"feesForm.get('totalamount').errors?.required\">Please Enter Total Anount Rs.\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Paid Amount Rs.</mat-label>\n                    <input matInput type=\"number\" formControlName=\"paidamount\" placeholder=\"Enter Paid Amount\" required>\n                    <mat-error *ngIf=\"feesForm.get('paidamount').errors?.required\">Please Enter Paid Anount Rs.\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Fees Terms</mat-label>\n                    <mat-select formControlName=\"feeterm\" required>\n                        <mat-option *ngFor=\"let term of feeterms\" [value]=\"term\">{{term}}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"feesForm.get('feeterm').errors?.required\">Please Select Fees Terms\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Transaction Mode</mat-label>\n                    <mat-select formControlName=\"paymentmode\" requierd>\n                        <mat-option *ngFor=\"let mode of paymentmode\" [value]=\"mode\">{{mode}}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"feesForm.get('paymentmode').errors?.required\">Please Select Transaction Mode\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Payment Date</mat-label>\n                    <input matInput type=\"date\" formControlName=\"paymentdate\" placeholder=\"Date\" required>\n                    <mat-error *ngIf=\"feesForm.get('paymentdate').errors?.required\">Please Select Date\n                    </mat-error>\n                </mat-form-field>\n                <div>\n                    <button mdbBtn type=\"submit\" color=\"default\" [outline]=\"true\" class=\"\"\n                        mdbWavesEffect>Subimt</button>\n                </div>\n\n            </div>\n        </div>\n    </form>\n</div>","<div class=\"container\">\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <div class=\"row\" *ngFor=\"let ad of studentFees\">\n        <div class=\"col-lg-8\" *ngIf=\"!isLoading\">\n            <table class=\" table table-bordered border-primary table-striped table-hover table-light\">\n                <tr>\n                    <th colspan=\"2\" class=\"text-center bg-info\"><b>Student Fees</b></th>\n                </tr>\n                <tr>\n                    <th>Student Id</th>\n                    <td>\n                        {{ad.studentid}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Name</th>\n                    <td>\n                        {{ad.stdname}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>FatherName</th>\n                    <td>\n                        {{ad.stdfathername}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Class</th>\n                    <td>\n                        {{ad.stdclass}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Mobile</th>\n                    <td>\n                        {{ad.stdmobile}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Total Amount Rs.</th>\n                    <td>\n                        {{ad.totalamount}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Paid Amount Rs.</th>\n                    <td>\n                        {{ad.paidamount}}\n                    </td>\n                </tr>\n\n                <tr>\n                    <th>Fees Term</th>\n                    <td>\n                        {{ad.feeterm}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Payment Mode</th>\n                    <td>\n                        {{ad.paymentmode}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Payment Date</th>\n                    <td>\n                        {{ad.paymentdate}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Balance</th>\n                    <td>\n                        {{feebalance}}\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { StudentLoginService } from 'src/app/auth/student-login.service';\nimport { FeesService } from 'src/app/student/services/fees.service';\n\n@Component({\n  selector: 'app-studentfees',\n  templateUrl: './studentfees.component.html',\n  styleUrls: ['./studentfees.component.css']\n})\nexport class StudentfeesComponent implements OnInit {\n  isLoading = false;\n  studentId: string;\n  studentFees: any[];\n  feebalance: number;\n\n  constructor(private studentService: StudentLoginService, private feesService: FeesService) { }\n\n  ngOnInit() {\n\n    this.studentId = this.studentService.getStudentId();\n    this.isLoading = true;\n    this.feesService.getFees(this.studentId)\n      .subscribe(fees => {\n        this.isLoading = false;\n        this.studentFees = [fees];\n        this.feebalance = fees.totalamount - fees.paidamount;\n      })\n  }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AdiminLoginService } from 'src/app/adimin/adimin-login.service';\nimport { Result } from '../models/result.model';\nimport { ResultService } from '../services/result.service';\n\n@Component({\n  selector: 'app-seeresult',\n  templateUrl: './seeresult.component.html',\n  styleUrls: ['./seeresult.component.css']\n})\nexport class SeeresultComponent implements OnInit, OnDestroy {\n\n  results: Result[] = [];\n  result: any[];\n  total: number;\n  precentage: number;\n  nbrresult: number = 0;\n  private resultSubs: Subscription;\n  adiminId: string;\n\n\n  resultForm: FormGroup;\n  constructor(private resultService: ResultService, private adiminService: AdiminLoginService) { }\n\n  ngOnInit() {\n\n    this.adiminId = this.adiminService.getadiminId();\n\n    this.resultForm = new FormGroup({\n      studentid: new FormControl(null, Validators.required)\n    })\n    this.resultService.getResults();\n    this.resultSubs = this.resultService.getResultUpadateListener()\n      .subscribe((results: Result[]) => {\n        console.log(results)\n        this.results = results;\n      })\n\n  }\n\n  seeResult(form) {\n    if (this.resultForm.invalid) {\n      return;\n    };\n    this.resultService.getResult(this.resultForm.value.studentid)\n      .subscribe(result => {\n        console.log(result);\n\n        this.result = [result];\n\n        this.nbrresult = ([result] as any[]).length;\n\n\n\n        this.total = result.telugu + result.hindi + result.english + result.maths + result.science + result.social;\n        this.precentage = this.total / 6;\n\n      })\n  }\n  deleteResult(studentid) {\n    this.resultService.deleteResult(studentid);\n  }\n  ngOnDestroy() {\n    this.resultSubs.unsubscribe();\n  }\n\n}\n","<div class=\"container-fuild mt-4\">\n    <h1>Student Result</h1>\n    <div class=\"row\">\n        <form [formGroup]=\"resultForm\" (submit)=\"seeResult(resultForm.value)\">\n            <div class=\"col-sm-4 text-center\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Id</mat-label>\n                    <input matInput type=\"number\" formControlName=\"studentid\" placeholder=\"Enter Student Id\" required>\n                </mat-form-field>\n                <br><br>\n                <button mdbBtn type=\"submit\" gradient=\"aqua\" rounded=\"true\" mdbWavesEffect>Search</button>\n            </div>\n        </form>\n    </div>\n\n    <!-- Table Start-->\n    <div class=\"container\">\n        <div class=\"row\" *ngFor=\"let rst of result\">\n            <div class=\"col-lg-8\">\n                <table class=\" table table-bordered table-striped table-hover table-light\">\n                    <tr>\n                        <th colspan=\"2\" class=\"text-center bg-info\"><b>Student Result</b></th>\n                    </tr>\n                    <tr>\n                        <th>Student Id</th>\n                        <td>\n                            {{rst.studentid}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Name</th>\n                        <td>\n                            {{rst.stdname}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Class</th>\n                        <td>\n                            {{rst.stdclass}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Telugu</th>\n                        <td>\n                            {{rst.telugu}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Hindi</th>\n                        <td>\n                            {{rst.hindi}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>English</th>\n                        <td>\n                            {{rst.english}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Maths</th>\n                        <td>\n                            {{rst.maths}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Science</th>\n                        <td>\n                            {{rst.science}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Scoial</th>\n                        <td>\n                            {{rst.social}}\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Total</th>\n                        <td>\n                            {{total}}\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <th>Precentage</th>\n                        <td>\n                            {{precentage}} %\n                        </td>\n                    </tr>\n\n\n                    <tr>\n                        <th></th>\n                        <td>\n                            <a class=\"btn btn-info\" [routerLink]=\"['/editresult', rst.studentid]\">Edit\n                            </a>\n                            <a class=\"btn btn-danger\" *ngIf=\"adiminId\" (click)=\"deleteResult(rst.studentid)\">Delete</a>\n                        </td>\n                    </tr>\n\n                </table>\n            </div>\n        </div>\n    </div>\n    <!-- Table End-->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ResultService } from '../services/result.service';\n\n@Component({\n  selector: 'app-addresult',\n  templateUrl: './addresult.component.html',\n  styleUrls: ['./addresult.component.css']\n})\nexport class AddresultComponent implements OnInit {\n\n  classes: string[] = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X'];\n\n  resultForm: FormGroup;\n\n  private studentid: string;\n  private mode = 'create';\n  resultid: string;\n\n  constructor(private resultService: ResultService, private activeRouter: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.resultForm = new FormGroup({\n      studentid: new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n      stdname: new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n      stdclass: new FormControl(null, { validators: [Validators.required] }),\n      telugu: new FormControl(null, { validators: [Validators.required, Validators.minLength(2)] }),\n      hindi: new FormControl(null, { validators: [Validators.required, Validators.minLength(2)] }),\n      english: new FormControl(null, { validators: [Validators.required, Validators.minLength(2)] }),\n      maths: new FormControl(null, { validators: [Validators.required, Validators.minLength(2)] }),\n      science: new FormControl(null, { validators: [Validators.required, Validators.minLength(2)] }),\n      social: new FormControl(null, { validators: [Validators.required, Validators.minLength(2)] })\n    });\n\n    this.studentid = this.activeRouter.snapshot.params['id'];\n\n    if (this.studentid) {\n      this.mode = 'edit';\n\n      this.resultService.getResult(this.studentid).subscribe(resultData => {\n        this.resultid = resultData._id;\n        this.resultForm.setValue({\n          studentid: resultData.studentid,\n          stdname: resultData.stdname,\n          stdclass: resultData.stdclass,\n          telugu: resultData.telugu,\n          hindi: resultData.hindi,\n          english: resultData.english,\n          maths: resultData.maths,\n          science: resultData.science,\n          social: resultData.social\n        })\n      })\n    }\n    else {\n      this.mode = 'create';\n    }\n\n\n  }\n\n\n  addResult(form) {\n    if (this.resultForm.invalid) {\n      return;\n    }\n    if (this.mode === 'create') {\n      this.resultService.addResult(\n        this.resultForm.value.studentid,\n        this.resultForm.value.stdname,\n        this.resultForm.value.stdclass,\n        this.resultForm.value.telugu,\n        this.resultForm.value.hindi,\n        this.resultForm.value.english,\n        this.resultForm.value.maths,\n        this.resultForm.value.science,\n        this.resultForm.value.social,\n      )\n    }\n    else {\n      console.log(this.resultid)\n      this.resultService.updateResult(\n        this.resultid,\n        this.resultForm.value.studentid,\n        this.resultForm.value.stdname,\n        this.resultForm.value.stdclass,\n        this.resultForm.value.telugu,\n        this.resultForm.value.hindi,\n        this.resultForm.value.english,\n        this.resultForm.value.maths,\n        this.resultForm.value.science,\n        this.resultForm.value.social,\n      )\n    }\n  }\n\n\n}\n","<div class=\"container\">\n    <h1 class=\"h1 text-info text-center mt-4\">Add Student Result</h1>\n    <form [formGroup]=\"resultForm\" (submit)=\"addResult(resultForm.value)\">\n        <div class=\"row\">\n            <div class=\"col-sm-6 empControls\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Id</mat-label>\n                    <input matInput type=\"text\" formControlName=\"studentid\" placeholder=\"Enter Student Id\" required>\n                    <mat-error *ngIf=\"resultForm.get('studentid').errors?.required\">Please Enter Student Id\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"resultForm.get('studentid').errors?.minlength\">\n                        Please Enter Minimum 3 Charectors\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Student Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"stdname\" placeholder=\"Enter Student Name\" required>\n                    <mat-error *ngIf=\"resultForm.get('stdname').errors?.required\">Please Enter Student FullName\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"resultForm.get('stdname').errors?.minlength\">\n                        Please Enter Minimum 3 Charector\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Class</mat-label>\n                    <mat-select formControlName=\"stdclass\" required>\n                        <mat-option *ngFor=\"let class of classes\" [value]=\"class\">{{class}}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"resultForm.get('stdclass').errors?.required\">Please Select Student Class\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Telugu</mat-label>\n                    <input matInput type=\"number\" formControlName=\"telugu\" placeholder=\"Enter Telugu Marks\" required>\n                    <mat-error *ngIf=\"resultForm.get('telugu').errors?.required\">Please Enter Telugu Marks\n                    </mat-error>\n                    <mat-error class=\"warning\" class=\"text-info\" *ngIf=\"resultForm.get('telugu').errors?.minlength\">\n                        Please Enter 2 Numbers only\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Hindi</mat-label>\n                    <input matInput type=\"number\" formControlName=\"hindi\" placeholder=\"Enter Hindi Marks\" required>\n                    <mat-error *ngIf=\"resultForm.get('hindi').errors?.required\">Please Enter Hindi Marks\n                    </mat-error>\n                    <mat-error class=\"warning\" class=\"text-info\" *ngIf=\"resultForm.get('hindi').errors?.minlength\">\n                        Please Enter 2 Numbers only\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-sm-6 empControls\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>English</mat-label>\n                    <input matInput type=\"number\" formControlName=\"english\" placeholder=\"Enter English Marks\" required>\n                    <mat-error *ngIf=\"resultForm.get('english').errors?.required\">Please Enter English Marks\n                    </mat-error>\n                    <mat-error class=\"warning\" class=\"text-info\" *ngIf=\"resultForm.get('english').errors?.minlength\">\n                        Please Enter 2 Numbers only\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Maths</mat-label>\n                    <input matInput type=\"number\" formControlName=\"maths\" placeholder=\"Enter Maths Marks\" required>\n                    <mat-error *ngIf=\"resultForm.get('maths').errors?.required\">Please Enter Maths Marks\n                    </mat-error>\n                    <mat-error class=\"warning\" class=\"text-info\" *ngIf=\"resultForm.get('maths').errors?.minlength\">\n                        Please Enter 2 Numbers only\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Science</mat-label>\n                    <input matInput type=\"number\" formControlName=\"science\" placeholder=\"Enter Science Marks\" required>\n                    <mat-error *ngIf=\"resultForm.get('science').errors?.required\">Please Enter Science Marks\n                    </mat-error>\n                    <mat-error class=\"warning\" class=\"text-info\" *ngIf=\"resultForm.get('science').errors?.minlength\">\n                        Please Enter 2 Numbers only\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Social</mat-label>\n                    <input matInput type=\"number\" formControlName=\"social\" placeholder=\"Enter Social Marks\" required>\n                    <mat-error *ngIf=\"resultForm.get('social').errors?.required\">Please Enter Social Marks\n                    </mat-error>\n                    <mat-error class=\"warning\" class=\"text-info\" *ngIf=\"resultForm.get('social').errors?.minlength\">\n                        Please Enter 2 Numbers only\n                    </mat-error>\n                </mat-form-field>\n                <div>\n                    <button mdbBtn type=\"submit\" color=\"default\" [outline]=\"true\" class=\"\" mdbWavesEffect\n                        [disabled]=\"!resultForm.valid\">Subimt</button>\n                </div>\n\n\n            </div>\n        </div>\n    </form>\n</div>","<div class=\"container\">\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <div class=\"row\" *ngFor=\"let rst of studentResult\">\n        <div class=\"col-lg-8\" *ngIf=\"!isLoading\">\n            <table class=\" table table-bordered table-striped table-hover table-light\">\n                <tr>\n                    <th colspan=\"2\" class=\"text-center bg-info\"><b>Student Result</b></th>\n                </tr>\n                <tr>\n                    <th>Student Id</th>\n                    <td>\n                        {{rst.studentid}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Name</th>\n                    <td>\n                        {{rst.stdname}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Class</th>\n                    <td>\n                        {{rst.stdclass}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Telugu</th>\n                    <td>\n                        {{rst.telugu}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Hindi</th>\n                    <td>\n                        {{rst.hindi}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>English</th>\n                    <td>\n                        {{rst.english}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Maths</th>\n                    <td>\n                        {{rst.maths}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Science</th>\n                    <td>\n                        {{rst.science}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Scoial</th>\n                    <td>\n                        {{rst.social}}\n                    </td>\n                </tr>\n                <tr>\n                    <th>Total</th>\n                    <td>\n                        {{total}}\n                    </td>\n                </tr>\n\n                <tr>\n                    <th>Precentage</th>\n                    <td>\n                        {{precentage}} %\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>\n<!-- Table End-->","import { Component, OnInit } from '@angular/core';\nimport { StudentLoginService } from 'src/app/auth/student-login.service';\nimport { ResultService } from 'src/app/student/services/result.service';\n\n@Component({\n  selector: 'app-studentresult',\n  templateUrl: './studentresult.component.html',\n  styleUrls: ['./studentresult.component.css']\n})\nexport class StudentresultComponent implements OnInit {\n\n  isLoading = false;\n  studentId: string;\n  studentResult: any[];\n  total: number;\n  precentage: number;\n\n  constructor(private studentService: StudentLoginService, private resultService: ResultService) { }\n\n  ngOnInit() {\n\n    this.studentId = this.studentService.getStudentId();\n    this.isLoading = true;\n    this.resultService.getResult(this.studentId)\n      .subscribe(result => {\n        this.isLoading = false;\n        console.log(result);\n        this.studentResult = [result];\n        this.total = result.telugu + result.hindi + result.english + result.maths + result.science + result.social;\n        this.precentage = this.total / 6;\n      })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  gender: string[] = ['Male', 'Female'];\n\n  employeeForm: FormGroup;\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n\n    this.employeeForm = new FormGroup({\n      username: new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n      password: new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n      fullname: new FormControl(null, { validators: [Validators.required, Validators.minLength(3)] }),\n      gender: new FormControl(null, { validators: [Validators.required] }),\n      email: new FormControl(null, { validators: [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")] }),\n      mobile: new FormControl(null, { validators: [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")] }),\n      address: new FormControl(null, { validators: [Validators.required] }),\n    })\n    this.employeeService.getEmployees();\n    this.employeeService.getEmployeeUpdateListener()\n      .subscribe(employees => {\n        console.log(employees)\n      })\n  }\n\n  addEmployee(employeeForm) {\n    if (this.employeeForm.invalid) {\n      return;\n    }\n    this.employeeService.addEmployee(\n      this.employeeForm.value.username,\n      this.employeeForm.value.password,\n      this.employeeForm.value.fullname,\n      this.employeeForm.value.gender,\n      this.employeeForm.value.email,\n      this.employeeForm.value.mobile,\n      this.employeeForm.value.address,\n    );\n    console.log(employeeForm);\n  }\n\n\n}\n","<div class=\"container-fuild\">\n    <h1 class=\"h1 text-info text-center mt-4\">Emplyee Form</h1>\n    <form [formGroup]=\"employeeForm\" (submit)=\"addEmployee(employeeForm.value)\">\n        <div class=\"row\">\n            <div class=\"col-sm-6 empControls\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>User Name</mat-label>\n                    <input matInput type=\"text\" formControlName=\"username\" placeholder=\"Enter User Name\" required>\n                    <mat-error *ngIf=\"employeeForm.get('username').errors?.required\">Please Enter User Name\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"employeeForm.get('username').errors?.minlength\">\n                        Please Enter Minimum 3 Charectors\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" formControlName=\"password\" placeholder=\"Enter Password\" required>\n                    <mat-error *ngIf=\"employeeForm.get('password').errors?.required\">Please Enter Password\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"employeeForm.get('password').errors?.minlength\">\n                        Please Enter Minimum 3 Charector\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>FullName</mat-label>\n                    <input matInput type=\"text\" formControlName=\"fullname\" placeholder=\"Enter FullName\" required>\n                    <mat-error *ngIf=\"employeeForm.get('fullname').errors?.required\">Please Enter FullName\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"employeeForm.get('fullname').errors?.minlength\">\n                        Please Enter Minimum 3 Charector\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Gender</mat-label>\n                    <mat-select formControlName=\"gender\">\n                        <mat-option *ngFor=\"let gen of gender\" [value]=\"gen\">{{gen}}</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"employeeForm.get('gender').errors?.required\">Please Select Gender\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-sm-6 empControls\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput type=\"email\" formControlName=\"email\" placeholder=\"Enter Email Address\" required>\n                    <mat-error *ngIf=\"employeeForm.get('email').errors?.required\">\n                        Please Enter E-mail\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"employeeForm.get('email').errors?.pattern\">\n                        Please Enter E-mail in Courrect Format\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Mobile</mat-label>\n                    <input matInput type=\"number\" formControlName=\"mobile\" maxlength=\"10\"\n                        placeholder=\"Enter Mobile Number\" required>\n                    <mat-error *ngIf=\"employeeForm.get('mobile').errors?.required\">\n                        Please Enter Mobile Number\n                    </mat-error>\n                    <mat-error class=\"warning\" *ngIf=\"employeeForm.get('mobile').errors?.pattern\">\n                        Please Enter 10 Numbers only\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Full Address</mat-label>\n                    <input matInput type=\"text\" formControlName=\"address\" placeholder=\"Enter  Address\" required>\n                    <mat-error *ngIf=\"employeeForm.get('address').errors?.required\">\n                        Please Enter Student Full Address\n                    </mat-error>\n                </mat-form-field>\n                <div>\n                    <button mdbBtn type=\"submit\" color=\"default\" [outline]=\"true\" class=\"\"\n                        mdbWavesEffect>Subimt</button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n<div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Student } from './student.model';\n\nconst BackEndUrl = environment.apiUrl + \"/adimision/login\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentLoginService {\n\n  isAuthenticated = false;\n\n  private token: string;\n  private tokenTimer: any;\n  private studentId: any;\n  private studentStatusListener = new Subject<boolean>();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getToken() {\n    return this.token;\n  }\n\n  getStudentStatusListner() {\n    return this.studentStatusListener;\n  }\n\n  getStudentId() {\n    return this.studentId;\n  }\n\n  getIsStudent() {\n    return this.isAuthenticated;\n  }\n\n\n\n  login(studentid: string, stddob: string) {\n    const student: Student = { studentid: studentid, stddob: stddob }\n    this.http.post<{ token: string, expiresIn: number, studentid: string }>(BackEndUrl, student)\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expriesInDuration = response.expiresIn;\n          console.log(response.expiresIn);\n          this.setStudentTimer(expriesInDuration);\n          this.isAuthenticated = true;\n          this.studentId = response.studentid;\n          this.studentStatusListener.next(true);\n          const now = new Date();\n          const exprirationDate = new Date(now.getTime() + expriesInDuration * 1000);\n          console.log(exprirationDate);\n          this.saveStudentData(token, exprirationDate, this.studentId);\n          this.router.navigate([\"/\"]);\n\n        }\n\n\n      }, error => {\n        this.studentStatusListener.next(false);\n      })\n  }\n\n\n\n  autoStudent() {\n    const studentInformation = this.getStudentData();\n\n    if (!studentInformation) {\n      return;\n    }\n\n    const now = new Date();\n    const expriesIn = studentInformation.exprirationDate.getTime()\n      - now.getTime();\n    this.token = studentInformation.token;\n    this.isAuthenticated = true;\n    this.studentId = studentInformation.studentId;\n    this.setStudentTimer(expriesIn / 1000);\n    this.studentStatusListener.next(true);\n\n  }\n\n  logout() {\n    this.token = '';\n    this.studentId = null;\n    this.isAuthenticated = false;\n    this.studentStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearStudentData();\n    this.router.navigate([\"/loginpage\"]);\n\n  }\n\n\n  private setStudentTimer(duration: number) {\n    console.log(\"Setting Timer:\" + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveStudentData(token: string, exprirationDate: Date, studentId: string) {\n\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"exprirationDate\", exprirationDate.toISOString());\n    localStorage.setItem(\"studentId\", studentId);\n\n  }\n\n  private clearStudentData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"exprirationDate\");\n    localStorage.removeItem(\"studentId\");\n  }\n\n  private getStudentData() {\n    const token = localStorage.getItem(\"token\");\n    const exprirationDate = localStorage.getItem(\"exprirationDate\");\n    const studentId = localStorage.getItem(\"studentId\");\n\n    if (!token || !exprirationDate) {\n      return false;\n    }\n    return {\n      token: token,\n      exprirationDate: new Date(exprirationDate),\n      studentId: studentId\n    }\n  }\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Employee } from './employee.model';\n\nconst BackEndUrl = environment.apiUrl + \"/employee/\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private employees: Employee[] = [];\n  private updateEmployee = new Subject<Employee[]>();\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees() {\n    this.http.get<{ message: string, employees: any }>(BackEndUrl)\n      .pipe(map((employees) => {\n        return employees.employees.map(employee => {\n          return {\n            username: employee.username,\n            password: employee.password,\n            fullname: employee.fullname,\n            gender: employee.gender,\n            email: employee.email,\n            mobile: employee.mobile,\n            address: employee.address\n          }\n        })\n      })).subscribe(transformedData => {\n        console.log(transformedData);\n        this.employees = transformedData;\n        this.updateEmployee.next([...this.employees]);\n      })\n  }\n\n  getEmployeeUpdateListener() {\n    return this.updateEmployee.asObservable();\n  }\n\n  addEmployee(username: string, password: string, fullname: string, gender: string, email: string, mobile: string,\n    address: string\n  ) {\n    const employee: Employee = {\n      username: username, password: password, fullname: fullname, gender: gender, email: email, mobile: mobile,\n      address: address\n    }\n    this.http.post<{ message: string, username: string }>(BackEndUrl, employee)\n      .subscribe(responseData => {\n        const username = responseData.username;\n        this.employees.push(employee);\n        this.updateEmployee.next([...this.employees])\n      })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StudentdetailComponent } from './studentdetail/studentdetail.component';\nimport { StudentfeesComponent } from './studentfees/studentfees.component';\nimport { StudentresultComponent } from './studentresult/studentresult.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '../material.module';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n\n\n\n@NgModule({\n  declarations: [\n    StudentdetailComponent,\n    StudentfeesComponent,\n    StudentresultComponent\n  ],\n  imports: [\n    CommonModule, BrowserAnimationsModule, MaterialModule, MDBBootstrapModule.forRoot(),\n\n  ]\n})\nexport class StudentdetailsModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loginpage',\n  templateUrl: './loginpage.component.html',\n  styleUrls: ['./loginpage.component.css']\n})\nexport class LoginpageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <mat-tab-group mat-align-tabs=\"center\">\n    <mat-tab label=\"Employee Login\">\n        <app-login></app-login>\n    </mat-tab>\n    <mat-tab label=\"Student Login\">\n        <app-student-login></app-student-login>\n    </mat-tab>\n    <mat-tab label=\"Adimin Login\">\n        <app-adimin-login></app-adimin-login>\n    </mat-tab>\n</mat-tab-group> -->\n\n<div class=\"container\">\n    <h1>Login Page</h1>\n    <div class=\"row \">\n        <div class=\"col-sm-4 card hoverable rainy-ashville-gradient\">\n            <app-login></app-login>\n        </div>\n        <div class=\"col-sm-4 card hoverable rare-wind-gradient\">\n            <app-student-login></app-student-login>\n        </div>\n        <div class=\"col-sm-4 card hoverable heavy-rain-gradient\">\n            <app-adimin-login></app-adimin-login>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container mt-3\">\n    <mdb-carousel class=\"carousel slide carousel-fade\" [animation]=\"'fade'\" [isControls]=\"false\" [interval]=\"2000\">\n        <mdb-carousel-item>\n            <img class=\"d-block w-100\" src=\"/assets/images/image2.jpg\" alt=\"First slide\">\n        </mdb-carousel-item>\n        <mdb-carousel-item>\n            <img class=\"d-block w-100\" src=\"/assets/images/image10.jpg\" alt=\"First slide\">\n        </mdb-carousel-item>\n        <mdb-carousel-item>\n            <img class=\"d-block w-100\" src=\"/assets/images/image7.jpg\" alt=\"First slide\">\n        </mdb-carousel-item>\n    </mdb-carousel>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdiminGuard } from './auth/authguard/adimin.guard';\nimport { EmployeeGuard } from './auth/authguard/employee.guard';\nimport { StudentGuard } from './auth/authguard/student.guard';\nimport { LoginService } from './auth/login.service';\nimport { LoginpageComponent } from './auth/loginpage/loginpage.component';\nimport { HomeComponent } from './common/home/home.component';\nimport { EmployeeComponent } from './employee/employee/employee.component';\nimport { AddfeesComponent } from './student/addfees/addfees.component';\nimport { AddresultComponent } from './student/addresult/addresult.component';\nimport { AdimisionComponent } from './student/adimision/adimision.component';\nimport { SeefeesComponent } from './student/seefees/seefees.component';\nimport { SeeresultComponent } from './student/seeresult/seeresult.component';\nimport { StudentdetailsComponent } from './student/studentdetails/studentdetails.component';\nimport { StudentdetailComponent } from './studentdetails/studentdetail/studentdetail.component';\nimport { StudentfeesComponent } from './studentdetails/studentfees/studentfees.component';\nimport { StudentresultComponent } from './studentdetails/studentresult/studentresult.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'adimision', component: AdimisionComponent, canActivate: [AdiminGuard] },\n  { path: 'editadimision/:id', component: AdimisionComponent, canActivate: [AdiminGuard] },\n  { path: 'stddetails', component: StudentdetailsComponent, canActivate: [AdiminGuard] },\n  { path: 'addresult', component: AddresultComponent, canActivate: [AdiminGuard] },\n  { path: 'editresult/:id', component: AddresultComponent, canActivate: [AdiminGuard] },\n  { path: 'seeresult', component: SeeresultComponent, canActivate: [AdiminGuard] },\n  { path: 'addfees', component: AddfeesComponent, canActivate: [AdiminGuard] },\n  { path: 'editfees/:id', component: AddfeesComponent, canActivate: [AdiminGuard] },\n  { path: 'seefees', component: SeefeesComponent, canActivate: [AdiminGuard] },\n  { path: 'addemployee', component: EmployeeComponent, canActivate: [AdiminGuard] },\n  // { path: 'login', component: LoginComponent },\n  // { path: 'adiminlogin', component: AdiminLoginComponent },\n  // { path: 'studentlogin', component: StudentLoginComponent },\n  //Student Pages\n  { path: 'studentdetail', component: StudentdetailComponent, canActivate: [StudentGuard] },\n  { path: 'studentresult', component: StudentresultComponent, canActivate: [StudentGuard] },\n  { path: 'studentfees', component: StudentfeesComponent, canActivate: [StudentGuard] },\n  { path: 'loginpage', component: LoginpageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AdiminGuard, StudentGuard]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\nconst modules = [\r\n  CdkTableModule,\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatBadgeModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatStepperModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [modules],\r\n  exports: [modules],\r\n})\r\nexport class MaterialModule {\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Adimin } from './adimin.model';\n\nconst BackEndUrl = environment.apiUrl + \"/adimin/\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdiminLoginService {\n  isAuthenticated = false;\n  private adiminId: any;\n  private token: string;\n  private tokenTimer: any;\n  private adiminStatusListener = new Subject<boolean>();\n\n  constructor(private http: HttpClient, private router: Router) { }\n  getToken() {\n    return this.token;\n  }\n\n  getAdiminStatusListner() {\n    return this.adiminStatusListener;\n  }\n\n  getadiminId() {\n    return this.adiminId;\n  }\n\n  getIsAdimin() {\n    return this.isAuthenticated;\n  }\n\n  adiminLogin(username: string, password: string) {\n    const adimin: Adimin = { username: username, password: password }\n    this.http.post<{ token: string, expiresIn: number, adiminId: string }>(BackEndUrl, adimin)\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expriesInDuration = response.expiresIn;\n          this.setAdiminTimer(expriesInDuration);\n          this.isAuthenticated = true;\n          this.adiminId = response.adiminId;\n          this.adiminStatusListener.next(true);\n          const now = new Date();\n          const exprirationDate = new Date(now.getTime() + expriesInDuration * 1000);\n          this.saveAdimin(token, exprirationDate, this.adiminId);\n          this.router.navigate([\"/\"]);\n\n        }\n      })\n  }\n\n\n\n  autoAdimin() {\n    const adiminInformation = this.getAdiminData();\n\n    if (!adiminInformation) {\n      return;\n    }\n    const now = new Date();\n    const expriesIn = adiminInformation.exprirationDate.getTime() - now.getTime();\n    this.token = adiminInformation.token;\n    this.isAuthenticated = true;\n    this.adiminId = adiminInformation.adiminId;\n    this.setAdiminTimer(expriesIn / 1000);\n    this.adiminStatusListener.next(true);\n  }\n  logout() {\n    this.token = 'null';\n    this.adiminId = null;\n    this.isAuthenticated = false;\n    this.adiminStatusListener.next(false);\n\n    clearTimeout(this.tokenTimer);\n    this.clearAdimin();\n    this.router.navigate([\"/loginpage\"]);\n  }\n\n  private setAdiminTimer(duration: number) {\n    console.log(\"Set Timer:\" + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  saveAdimin(token: string, exprirationDate: Date, adiminId: string) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"exprirationDate\", exprirationDate.toISOString());\n    localStorage.setItem(\"adiminId\", adiminId);\n  }\n\n  clearAdimin() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"exprirationDate\")\n    localStorage.removeItem(\"adiminId\");\n  }\n\n  getAdiminData() {\n    const token = localStorage.getItem(\"token\");\n    const exprirationDate = localStorage.getItem(\"exprirationDate\");\n    const adiminId = localStorage.getItem(\"adiminId\");\n\n    if (!token || !exprirationDate) {\n      return false;\n    }\n    return {\n      token: token,\n      exprirationDate: new Date(exprirationDate),\n      adiminId: adiminId\n    }\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}